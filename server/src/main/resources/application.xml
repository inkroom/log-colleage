<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="cn.inkroom.log.server.config"/>
    <context:component-scan base-package="cn.inkroom.log.server.service"/>
    <context:component-scan base-package="cn.inkroom.log.server.dao"/>
    <context:component-scan base-package="cn.inkroom.log.server.quartz"/>
    <context:component-scan base-package="cn.inkroom.log.quartz"/>

    <aop:config>

    </aop:config>


    <bean class="cn.inkroom.log.server.handler.PropertiesHandler">
        <property name="locations" >
            <list >
                <value>classpath:config.properties</value>
                <!--<value>classpath:quartz.properties</value>-->
                <!--<value>classpath:socket.properties</value>-->
            </list>
        </property>
    </bean>

    <bean class="cn.inkroom.log.server.handler.DbConnectFactory">
        <constructor-arg name="database" value="${influx.database}"/>
        <constructor-arg name="time" value="${influx.time}"/>
        <constructor-arg name="url" value="${influx.url}"/>
        <constructor-arg name="username" value="${influx.username}"/>
        <constructor-arg name="password" value="${influx.password}"/>
    </bean>


    <bean class="cn.inkroom.log.server.socket.SocketHandler">
        <constructor-arg value="${socket.port}"/>
    </bean>

    <!--定时任务配置-->
    <!--<bean id="jobFactory" class="cn.inkroom.log.service.quartz.cn.inkroom.log.quartz.AutoSpringBeanJobFactory"/>-->

    <!--<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <!--<property name="jobFactory" ref="jobFactory"/>-->
        <!--&lt;!&ndash;<property name="dataSource" ref="dataSource"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="jobDetails">&ndash;&gt;-->
        <!--&lt;!&ndash;<list>&ndash;&gt;-->
        <!--&lt;!&ndash;<ref bean="simpleJobDetail"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<ref bean="firstJobDetail"/>&ndash;&gt;-->
        <!--&lt;!&ndash;</list>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="triggers">&ndash;&gt;-->
        <!--&lt;!&ndash;<list>&ndash;&gt;-->
        <!--&lt;!&ndash;<ref bean="simpleTrigger"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<ref bean="cronTrigger"/>&ndash;&gt;-->
        <!--&lt;!&ndash;</list>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
    <!--</bean>-->

    <!--&lt;!&ndash;<bean id="schedulerFactory" class="org.quartz.impl.StdSchedulerFactory"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<bean id="scheduler" class="org.quartz.impl.StdScheduler" factory-bean="schedulerFactory" factory-method="getScheduler">&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="jobFactory" ref="jobFactory"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <!--<bean class="cn.inkroom.log.service.quartz.cn.inkroom.log.quartz.SchedulerManager">-->
        <!--<property name="schedulerFactoryBean" ref="schedulerFactoryBean"/>-->
    <!--</bean>-->

    <!--数据连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:./log_server"/>
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <property name="minIdle" value="5"/>
    </bean>

    <!-- 配置mybatis的sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mappers.xml文件 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/*.xml</value>
            </list>
        </property>
        <!-- mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- pagehelper 配置 -->
        <!--<property name="plugins">-->
        <!--<array>-->
        <!--<beans class="com.github.pagehelper.PageInterceptor">-->
        <!--&lt;!&ndash; 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 &ndash;&gt;-->
        <!--<property name="properties">-->
        <!--<value>-->
        <!--&lt;!&ndash;  helperDialect=mysql-->
        <!--reasonable=true-->
        <!--supportMethodsArguments=true-->
        <!--params=count=countSql-->
        <!--autoRuntimeDialect=true &ndash;&gt;-->
        <!--</value>-->
        <!--</property>-->
        <!--</beans>-->
        <!--</array>-->
        <!--</property>-->
        <!--<property name="typeAliasesPackage" value="com.nsu.beans"/>-->
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.inkroom.log.server.dao.h2"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>
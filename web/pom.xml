<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cn.inkroom.log</groupId>
        <artifactId>parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <!--<relativePath/>-->
    </parent>
    <properties>
        <jetty.version>9.4.17.v20190418</jetty.version>
        <thymeleaf.version>3.0.11.RELEASE</thymeleaf.version>
        <vertx.version>3.6.3</vertx.version>
    </properties>
    <packaging>jar</packaging>
    <artifactId>web</artifactId>
    <version>1.0-SNAPSHOT</version>
    <description>负责日志文件的查询下载，查看各server的状态</description>
    <dependencies>

        <!-- https://mvnrepository.com/artifact/org.simplejavamail/simple-java-mail -->
        <dependency>
            <groupId>org.simplejavamail</groupId>
            <artifactId>simple-java-mail</artifactId>
            <version>5.1.6</version>
        </dependency>


        <dependency>
            <groupId>cn.inkroom.log</groupId>
            <artifactId>model</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!--<dependency>-->
        <!--<groupId>com.fasterxml.jackson.core</groupId>-->
        <!--<artifactId>jackson-core</artifactId>-->
        <!--<version>2.8.1</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>com.fasterxml.jackson.core</groupId>-->
        <!--<artifactId>jackson-databind</artifactId>-->
        <!--<version>2.8.1</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>com.fasterxml.jackson.core</groupId>-->
        <!--<artifactId>jackson-annotations</artifactId>-->
        <!--<version>2.8.1</version>-->
        <!--</dependency>-->

        <!--参考资料 https://blog.csdn.net/simonchi/article/details/51995825-->
        <!-- https://mvnrepository.com/artifact/org.eclipse.jetty.aggregate/jetty-all-server -->
        <!--<dependency>-->
        <!--<groupId>org.eclipse.jetty.aggregate</groupId>-->
        <!--<artifactId>jetty-all-service</artifactId>-->
        <!--<version>8.2.0.v20160908</version>-->
        <!--</dependency>-->
        <!-- jetty -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version> <!-- <scope>provided</scope> -->
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.eclipse.jetty.websocket/websocket-server -->
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.eclipse.jetty</groupId>-->
        <!--<artifactId>jetty-jsp</artifactId>-->
        <!--<version>${jetty.version}</version>-->
        <!--</dependency>-->

        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
            <!--<scope>test</scope>-->
        </dependency>
        <!--模板引擎-->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf</artifactId>
            <version>${thymeleaf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring5</artifactId>
            <version>${thymeleaf.version}</version>
        </dependency>

        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
            <version>2.3.0</version>
        </dependency>


        <!--邮件服务,用于发送邮件-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mail-client</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-stomp</artifactId>
            <version>${vertx.version}</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/javax.mail/mail -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <scope>test</scope>
            <version>1.4.7</version>
        </dependency>


        <dependency>
            <groupId>cn.inkroom.log</groupId>
            <artifactId>quartz</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>


        <!-- 使用spring websocket依赖的jar包 -->
        <dependency>
            <groupId>${spring.group}</groupId>
            <artifactId>spring-websocket</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>${spring.group}</groupId>
            <artifactId>spring-messaging</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--持久层配置-->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.192</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>2.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.3.1</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.4.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!--持久层配置 end-->

        <dependency>
            <groupId>cn.inkroom.log</groupId>
            <artifactId>activeMq</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- controller 测试需要,jetty自带，不用另外引入 -->
        <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <!--<scope>provided</scope>-->
        </dependency>

    </dependencies>


    <build>
        <!--<finalName>generateImportCarSql</finalName>-->
        <!--<sourceDirectory>src/main/java</sourceDirectory>-->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/webapp</directory>
                <!--注意此次必须要放在此目录下才能被访问到-->
                <targetPath>webapp</targetPath>
                <includes>
                    <include>**/**</include>
                </includes>
            </resource>
            <!-- -&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-->
            <!--作者：heguiliang_123-->
            <!--来源：CSDN-->
            <!--原文：https://blog.csdn.net/heguiliang_123/article/details/80345356-->
            <!--版权声明：本文为博主原创文章，转载请附上博文链接！-->
            <!-- 控制资源文件的拷贝 -->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>config.properties</include>
                    <!--<include>**/*.xml</include>-->
                    <!--<include>**/*.tld</include>-->
                </includes>
                <filtering>true</filtering>

                <!-- 配置文件外置（在打包时取消注释）
                    资源文件拷贝到编译输出路径target的子文件夹config目录下，最终结构如下:
                    target
                       ...config
                           ...spring
                           ...mapper
                           ...env
                       ...lib
                       ...generateImportCarSql.jar
                 -->
                <targetPath>${project.build.directory}/config</targetPath>
            </resource>
            <!--以下用于处理test时资源文件找不到问题-->
            <resource>
                <directory>src/main/resources</directory>
                <!--<includes>*.*</includes>-->
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- maven sql 插件 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.3</version>
                <dependencies>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>1.4.192</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>org.h2.Driver</driver>
                    <url>jdbc:h2:${project.basedir}/log_web</url>
                    <!--<username>sa</username>-->
                    <!--<password></password>-->
                    <srcFiles>
                        <srcFile>src/test/resources/log_web.sql</srcFile>
                    </srcFiles>
                </configuration>
            </plugin>
            <!-- 设置编译版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <excludes>
                        <!--不知道哪个起作用了，就这样放着吧-->
                        <!--<exclude>src/main/resources/config.properties</exclude>-->
                        <exclude>/config.properties</exclude>
                        <exclude>config.properties</exclude>
                        <exclude>classes/config.properties</exclude>
                    </excludes>
                    <archive>
                        <!-- 清单文件 -->
                        <manifest>
                            <mainClass>cn.inkroom.log.web.Entry</mainClass>
                            <addClasspath>true</addClasspath>
                            <!--<class></class>-->
                            <classpathPrefix>lib</classpathPrefix>
                        </manifest>
                        <!-- 给清单文件添加键值对(配置文件外置) -->
                        <manifestEntries>
                            <Class-Path>./ ./config/</Class-Path>
                        </manifestEntries>
                    </archive>
                    <classesDirectory>
                    </classesDirectory>
                </configuration>
            </plugin>
            <!-- 拷贝依赖的jar包到lib目录 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/lib
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 解决资源文件的编码问题 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!-- 打包source文件为jar文件 -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <attach>true</attach>
                    <!--<encoding>UTF-8</encoding>-->
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution><!-- 配置执行器 -->
                        <id>make-assembly</id>
                        <phase>package</phase><!-- 绑定到package生命周期阶段上 -->
                        <goals>
                            <goal>single</goal><!-- 只运行一次 -->
                        </goals>
                        <configuration>
                            <finalName>${project.name}</finalName>
                            <descriptor>src/test/resources/assembly.xml</descriptor><!--配置描述文件路径-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
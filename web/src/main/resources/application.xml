<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 启动Springmvc注解驱动 -->
    <mvc:annotation-driven/> <!-- 自动将控制器加载到bean -->
    <context:component-scan
            base-package="cn.inkroom.log.web"/>
    <!-- 配置处理静态资源的请求 --> <!-- <mvc:resources mapping="assets/js/**" location="assets/js/" />
    <mvc:resources mapping="assets/css/**" location="assets/css/" /> --> <!-- 配置视图解析器 -->
    <!--<bean-->
            <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value=""/>-->
        <!--<property name="suffix" value=".jsp"/>&lt;!&ndash;可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 &ndash;&gt; &lt;!&ndash; <property name="viewClass"-->
            <!--value="org.springframework.web.servlet.view.JstlView" /> &ndash;&gt;-->
    <!--</bean>-->

    <bean id="templateResolver"
          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".html" />
        <!--<property name="characterEncoding" value="UTF-8"/>-->
        <property name="order" value="1"/>
        <!--<property name="templateMode" value="HTML5"/>-->
        <!--<property name="templateMode" value="HTML" />-->
        <property name="cacheable" value="false" />
    </bean>

    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
    </bean>
    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!--数据连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:tcp://localhost/~/log_web"/>
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <property name="minIdle" value="5"/>
    </bean>

    <!-- 配置mybatis的sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mappers.xml文件 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/*.xml</value>
            </list>
        </property>
        <!-- mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- pagehelper 配置 -->
        <!--<property name="plugins">-->
        <!--<array>-->
        <!--<beans class="com.github.pagehelper.PageInterceptor">-->
        <!--&lt;!&ndash; 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 &ndash;&gt;-->
        <!--<property name="properties">-->
        <!--<value>-->
        <!--&lt;!&ndash;  helperDialect=mysql-->
        <!--reasonable=true-->
        <!--supportMethodsArguments=true-->
        <!--params=count=countSql-->
        <!--autoRuntimeDialect=true &ndash;&gt;-->
        <!--</value>-->
        <!--</property>-->
        <!--</beans>-->
        <!--</array>-->
        <!--</property>-->
        <!--<property name="typeAliasesPackage" value="com.nsu.beans"/>-->
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.inkroom.log.web.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
</beans>